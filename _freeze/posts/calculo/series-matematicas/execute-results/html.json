{
  "hash": "46c0b8122b6742c970dc5f0a9e349688",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Séries Matemáticas\"\ndescription: \"Introdução a séries numéricas, com exemplos de convergência e resolução com Python.\"\ndate: 2025-04-25\ncategories: [Cálculo]\nformat:\n  html:\n    toc: true\n    code-fold: true\nbibliography: referencias.bib\ncsl: apa.csl  # ou outro estilo (opcional)\nnocite: \"@*\"\nexecute:\n  kernel: ctgan_env\n---\n\n## Definição\n\nUma **série** é a soma dos termos de uma sequência:\n\n$$\n\\sum_{n=1}^{\\infty} a_n\n$$\n\nDizemos que uma série **converge** se a sequência das somas parciais tem limite finito [@apostol]:\n\n$$\nS_N = \\sum_{n=1}^{N} a_n \\longrightarrow S \\quad \\text{quando } N \\to \\infty\n$$\n\n# 🏁 Introdução\n\nAs séries numéricas desempenham um papel fundamental no estudo de fenómenos contínuos e discretos.  \nUma série é a soma de uma sequência infinita de números.\n\nA sua análise inclui:\n\n- Identificação de convergência ou divergência,\n- Estudo de séries especiais,\n- Aplicação prática em Física, Engenharia, e Matemática Avançada.\n\n---\n\n## Vídeo de Apoio\n\nVeja a explicação introdutória no vídeo abaixo:\n\n<div style=\"text-align: center; margin: 20px 0;\">\n  <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/JPsaS5nJxdU?si=7abGdScCTeFpBJzz\" \n    title=\"YouTube video player\" frameborder=\"0\" \n    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" \n    referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen>\n  </iframe>\n</div>\n\n\n## Exemplo 1 — Série Geométrica\n\nConsidere a série:\n\n$$\n\\sum_{n=0}^{\\infty} ar^n = a + ar + ar^2 + ar^3 + \\dots\n$$\n\nSe $|r| < 1$, então a série converge para:\n\n$$\n\\sum_{n=0}^{\\infty} ar^n = \\frac{a}{1 - r}\n$$\n\n### Resolução em Python\n\n::: {#99c0742c .cell execution_count=1}\n``` {.python .cell-code}\n# Série geométrica: soma parcial com a = 2 e r = 0.5\na = 2\nr = 0.5\nN = 10\n\nsoma = sum(a * r**n for n in range(N))\nsoma_limite = a / (1 - r)\n\nprint(f\"Soma dos {N} primeiros termos: {soma:.4f}\")\nprint(f\"Valor limite (teórico): {soma_limite:.4f}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSoma dos 10 primeiros termos: 3.9961\nValor limite (teórico): 4.0000\n```\n:::\n:::\n\n\n## Exemplo 2 — Série Harmónica\n\nA série harmónica é dada por:\n\n$$\n\\sum_{n=1}^{\\infty} \\frac{1}{n}\n$$\n\nEmbora os termos $1/n$ tendam a zero, a série **diverge** (soma parcial cresce sem limite).\n\n### Resolução em Python\n\n::: {#46481432 .cell execution_count=2}\n``` {.python .cell-code}\n# Soma parcial da série harmónica\nN = 20\nsoma = sum(1/n for n in range(1, N+1))\nprint(f\"Soma dos {N} primeiros termos: {soma:.4f}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSoma dos 20 primeiros termos: 3.5977\n```\n:::\n:::\n\n\n## Exemplo 3 — Código Python Externo\n\nAlém dos exemplos resolvidos acima, disponibilizamos um script Python que implementa uma função geral para calcular a soma dos $n$ primeiros termos de uma série geométrica:\n\n::: {#c688aca5 .cell execution_count=3}\n``` {.python .cell-code}\n# Código presente em: python/series_matematicas.py\n\ndef soma_serie_geometrica(a, r, n):\n    \"\"\"\n    Calcula a soma dos n primeiros termos de uma série geométrica.\n    a: termo inicial\n    r: razão\n    n: número de termos\n    \"\"\"\n    soma = a * (1 - r**n) / (1 - r) if r != 1 else a * n\n    return soma\n\n# Exemplo de uso\nif __name__ == \"__main__\":\n    a = 2\n    r = 0.5\n    n = 10\n    resultado = soma_serie_geometrica(a, r, n)\n    print(f\"Soma dos {n} primeiros termos: {resultado:.4f}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSoma dos 10 primeiros termos: 3.9961\n```\n:::\n:::\n\n\n### Aceda ao código completo\nVocê pode também visualizar e fazer o download do script Python diretamente:\n\n<div style=\"display: flex; flex-wrap: wrap; gap: 16px; justify-content: center; margin: 20px 0;\"> <a href=\"../../python/series_matematicas.py\" download style=\"padding: 12px 24px; background-color: #198754; color: white; border-radius: 8px; text-decoration: none; font-size: 1.1em;\"> 📥 Baixar Código Python </a> <a href=\"../../python/series_matematicas.py\" target=\"_blank\" style=\"padding: 12px 24px; background-color: #0d6efd; color: white; border-radius: 8px; text-decoration: none; font-size: 1.1em;\"> 📖 Ver Código Online </a> </div>\n\n<div style=\"text-align: center; margin: 20px 0;\">\n  <a href=\"https://colab.research.google.com/github/cacbarros/blog-fortec/blob/main/python/series_matematicas.ipynb\" target=\"_blank\" style=\"padding: 12px 24px; background-color: #f9ab00; color: black; border-radius: 8px; text-decoration: none; font-size: 1.1em;\">\n    Executar no Google Colab\n  </a>\n</div>\n\n## 🚀 Executar o Notebook no Google Colab\n\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/cacbarros/blog-fortec/blob/main/python/series_matematicas.ipynb)\n\n\n## 🚀 Executar o Notebook no Google Colab\n\nSe preferir, pode explorar o exemplo interativamente no ambiente de nuvem do Google Colab.  \nClique no badge abaixo para abrir o notebook e executar o código diretamente:\n\n<div style=\"text-align: center; margin: 20px 0;\">\n  <a href=\"https://colab.research.google.com/github/cacbarros/blog-fortec/blob/main/python/series_matematicas.ipynb\" target=\"_blank\">\n    <img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open in Colab\" style=\"height: 60px;\">\n  </a>\n</div>\n\n\n## Observação\n\nA convergência de uma série depende do comportamento da soma parcial, **não apenas** da tendência dos termos $a_n$.\n\n## Séries Matemáticas - Avaliação\n\n- [Problema de Séries Numéricas](problema-series.qmd)\n\n---\n\n<p><a href=\"index.html\" style=\"padding: 8px 16px; background-color: #17a2b8; color: white; border-radius: 5px; text-decoration: none;\">Voltar para Índice de Séries Matemáticas</a></p>\n\n\n\n## Referências\n\n",
    "supporting": [
      "series-matematicas_files"
    ],
    "filters": [],
    "includes": {}
  }
}